# This lammps interface support the PWMLFF forcefiled DP and NEP 
#1. load nvcc and gcc
module load cuda/11.8-share intel/2020
source /opt/rh/devtoolset-8/enable #gcc8.3.1

#2. activate python environment
conda activate torch2_feat

#3. load PWMLFF path
export OP_LIB_PATH=$(dirname $(dirname $(which PWMLFF)))/op/build/lib

#4. compile code
 

    # step1. compile c++ cuda code for nep gpu lammps interface
    cd src/PWMLFF/NEP_GPU
    make clean
    make

    # step2. compile PWMLFF pair
    cd src
    make yes-PWMLFF
    
    # step3. compile lammps code
    make mpi -j6 


#5. use lammps interface for md

    # step1. export the torch lib
     export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(python3 -c "import torch; print(torch.__path__[0])")/lib:$(dirname $(dirname $(which python3)))/lib:$(dirname $(dirname $(which PWMLFF)))/op/build/lib

    # (optional) echo "export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:$(python3 -c "import torch; print(torch.__path__[0])")/lib:$(dirname $(dirname $(which python3)))/lib:$(dirname $(dirname $(which PWMLFF)))/op/build/lib" >> ~/.bashrc

    # step2. run lammps  (For GPU version, use lmp_mpi_gpu)


